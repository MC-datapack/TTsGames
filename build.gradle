plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "2.0.21"
}

group = project.group
version = project.version
java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of("${project.java_version}")
    }
}
kotlin {
    jvmToolchain {
        languageVersion = JavaLanguageVersion.of("${project.java_version}")
    }
}
sourceSets {
    main {
        java {
            srcDirs = ["${project.java_dir}"]
        }
        resources {
            srcDirs = ["${project.resource_dir}"]
        }
    }
}
repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        name = "javazoom"
        url 'https://mavenlibs.com/maven/dependency'
    }
}
dependencies {
    implementation gradleApi()
    implementation "com.google.code.gson:gson:${project.gson_version}"
    implementation "com.github.umjammer:jlayer:${project.jlayer_version}"
    implementation "org.vineflower:vineflower:${project.vineflower_version}"
    implementation "javazoom:jlayer:${project.jlayer_version}"
    implementation "com.googlecode.soundlibs:mp3spi:${project.mp3spi_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}
processResources {
    inputs.property "version", project.version

    filesMatching(project.share_version) {
        expand "version": project.version
    }
}
jar {
    manifest {
        attributes(
                'Main-Class': "${project.main_class}"
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from("${project.resource_dir}")
}
